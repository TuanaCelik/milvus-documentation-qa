{"content": "<iframe src=\"https://www.googletagmanager.com/ns.html?id=G-V1G3KQ048M\" height=\"0\" width=\"0\" style=\"display: none; visibility: hidden\" aria-hidden=\"true\"></iframe>DocsTutorialsToolsBlogCommunityTry Managed Milvus FREEDocsTutorialsToolsBlogCommunityStars22kJoin SlackTry Managed Milvus FREEHow we use cookiesThis website stores cookies on your computer. By continuing to browse or by clicking \u2018Accept\u2019, you agree to the storing of cookies on your device to enhance your site experience and for analytical purposes.AcceptSearch\u2318KHomev2.2.x\u200bAbout MilvusGet StartedUser GuideAdministration GuideIntegrationsBenchmarksToolsReferenceArchitectureBitsetBoolean Expression RulesConsistencyCoordinator HAGlossaryIn-memory ReplicaKnowhereSchemaDynamic SchemaJSONSimilarity MetricsPartition KeyMulti-tenancySystem ConfigurationsTimestampTime SynchronizationTime TravelUsers and RolesVector IndexScalar IndexExample ApplicationsFAQsAPI referenceSimilarity Metrics\nIn Milvus, similarity metrics are used to measure similarities among vectors. Choosing a good distance metric helps improve the classification and clustering performance significantly.\nThe following table shows how these widely used similarity metrics fit with various input data forms and Milvus indexes.\n\nFloating point embeddings Binary embeddings\n\n\n\n\n  \n    Similarity Metrics\n    Index Types\n  \n\n\n  \n    Euclidean distance (L2)Inner product (IP)\n    FLATIVF_FLATIVF_SQ8IVF_PQHNSWANNOYDISKANN\n  \n\n\n\n\n\n\n  \n    Distance Metrics\n    Index Types\n  \n\n\n  \n    JaccardTanimotoHamming\n    BIN_FLATBIN_IVF_FLAT\n  \n  \n    SuperstructureSubstructure\n    * BIN_FLAT\n  \n\n\n\nEuclidean distance (L2)\nEssentially, Euclidean distance measures the length of a segment that connects 2 points.\nThe formula for Euclidean distance is as follows:\n\n    \n      \n  \n    \n    Euclidean distance.\n  \nwhere a = (a1, a2,..., an) and b = (b1, b2,..., bn) are two points in n-dimensional Euclidean space\nIt's the most commonly used distance metric and is very useful when the data are continuous.\n\nMilvus only caculates the value before applying square root when Euclidean distance is chosen as the distance metric.\n\nInner product (IP)\nThe IP distance between two embeddings are defined as follows:\n\n    \n      \n  \n    \n    Inner product.\n  \nWhere A and B are embeddings, ||A|| and ||B|| are the norms of A and B.\nIP is more useful if you are more interested in measuring the orientation but not the magnitude of the vectors.\n\n If you use IP to calculate embeddings similarities, you must normalize your embeddings. After normalization, the inner product equals cosine similarity.\n\nSuppose X' is normalized from embedding X:\n\n    \n      \n  \n    \n    Normalize.\n  \nThe correlation between the two embeddings is as follows:\n\n    \n      \n  \n    \n    Normalization.\n  \nJaccard distance\nJaccard similarity coefficient measures the similarity between two sample sets and is defined as the cardinality of the intersection of the defined sets divided by the cardinality of the union of them. It can only be applied to finite sample sets.\n\n    \n      \n  \n    \n    Jaccard similarity coefficient.\n  \nJaccard distance measures the dissimilarity between data sets and is obtained by subtracting the Jaccard similarity coefficient from 1. For binary variables, Jaccard distance is equivalent to the Tanimoto coefficient.\n\n    \n      \n  \n    \n    Jaccard distance.\n  \nTanimoto distance\nFor binary variables, the Tanimoto coefficient is equivalent to Jaccard distance:\n\n    \n      \n  \n    \n    Tanimoto coefficient.\n  \nIn Milvus, the Tanimoto coefficient is only applicable for a binary variable, and for binary variables, the Tanimoto coefficient ranges from 0 to +1 (where +1 is the highest similarity).\nFor binary variables, the formula of Tanimoto distance is:\n\n    \n      \n  \n    \n    Tanimoto distance.\n  \nThe value ranges from 0 to +infinity.\nHamming distance\nHamming distance measures binary data strings. The distance between two strings of equal length is the number of bit positions at which the bits are different.\nFor example, suppose there are two strings, 1101 1001 and 1001 1101.\n11011001 \u2295 10011101 = 01000100. Since, this contains two 1s, the Hamming distance, d (11011001, 10011101) = 2.\nSuperstructure\nThe Superstructure is used to measure the similarity of a chemical structure and its superstructure. When the value equals 0, this means the chemical structure in the database is the superstructure of the target chemical structure.\nSuperstructure similarity can be measured by:\n\n    \n      \n  \n    \n    Superstructure.\n  \nWhere\n\nB is the superstructure of A\nNA specifies the number of bits in the fingerprint of molecular A.\nNB specifies the number of bits in the fingerprint of molecular B.\nNAB specifies the number of shared bits in the fingerprint of molecular A and B.\n\nSubstructure\nThe Substructure is used to measure the similarity of a chemical structure and its substructure. When the value equals 0, this means the chemical structure in the database is the substructure of the target chemical structure.\nSubstructure similarity can be measured by:\n\n    \n      \n  \n    \n    Substructure.\n  \nWhere\n\nB is the substructure of A\nNA specifies the number of bits in the fingerprint of molecular A.\nNB specifies the number of bits in the fingerprint of molecular B.\nNAB specifies the number of shared bits in the fingerprint of molecular A and B.\n\nFAQ\n\nWhy is the top1 result of a vector search not the search vector itself, if the metric type is inner product?\nThis occurs if you have not normalized the vectors when using inner product as the distance metric.\n\n\nWhat is normalization? Why is normalization needed?\nNormalization refers to the process of converting an embedding (vector) so that its norm equals 1. If you use Inner Product to calculate embeddings similarities, you must normalize your embeddings. After normalization, inner product equals cosine similarity.\n\n\nSee Wikipedia for more information.\n\n\n\nWhy do I get different results using Euclidean distance (L2) and inner product (IP) as the distance metric?\nCheck if the vectors are normalized. If not, you need to normalize the vectors first. Theoretically speaking, similarities worked out by L2 are different from similarities worked out by IP, if the vectors are not normalized.\n\nWhat's next\n\nLearn more about the supported index types in Milvus.\nmetric.md was last updated at 2023-04-10 03:54:29: Update some snippetsEdit this pageReport a bugRequest doc changesOn this pageSimilarity MetricsFAQWhat's nextResourcesDocsBlogManaged serviceTutorialsBootcampDemoVideoToolsAttuMilvus CLISizing ToolMivlus backup ToolCommunityGet involvedSlackGithubForumMilvus. 2023 All rights reserved./*<![CDATA[*/window.pagePath=\"/docs/metric.md\";/*]]>*//*<![CDATA[*/window.___chunkMapping={\"polyfill\":[\"/polyfill.js\"],\"app\":[\"/app.js\"],\"component---src-pages-404-js\":[\"/component---src-pages-404-js.js\",\"/component---src-pages-404-js.ffef32ceb6972d1b6709.css\"],\"component---src-pages-bootcamp-jsx\":[\"/component---src-pages-bootcamp-jsx.js\",\"/component---src-pages-bootcamp-jsx.edf1a55d3c49094e9b41.css\"],\"component---src-pages-community-index-jsx\":[\"/component---src-pages-community-index-jsx.js\",\"/component---src-pages-community-index-jsx.c505d2a5fff7c1e4b2c8.css\"],\"component---src-pages-index-jsx\":[\"/component---src-pages-index-jsx.js\",\"/component---src-pages-index-jsx.45df0d4bdfe2db469d6c.css\"],\"component---src-pages-milvus-demos-index-jsx\":[\"/component---src-pages-milvus-demos-index-jsx.js\",\"/component---src-pages-milvus-demos-index-jsx.1a3d1c4caf417de255ae.css\"],\"component---src-pages-milvus-demos-reverse-image-search-jsx\":[\"/component---src-pages-milvus-demos-reverse-image-search-jsx.js\",\"/component---src-pages-milvus-demos-reverse-image-search-jsx.c41e4c5ead83649937e8.css\"],\"component---src-pages-slack-jsx\":[\"/component---src-pages-slack-jsx.js\",\"/component---src-pages-slack-jsx.b3b356986d01fe89f9d1.css\"],\"component---src-pages-tools-sizing-jsx\":[\"/component---src-pages-tools-sizing-jsx.js\",\"/component---src-pages-tools-sizing-jsx.66d1c05015f9508df90b.css\"],\"component---src-templates-api-doc-template-jsx\":[\"/component---src-templates-api-doc-template-jsx.js\",\"/component---src-templates-api-doc-template-jsx.6c57c73b99682695a5ef.css\"],\"component---src-templates-blog-list-template-jsx\":[\"/component---src-templates-blog-list-template-jsx.js\",\"/component---src-templates-blog-list-template-jsx.71f592374d478c258caf.css\"],\"component---src-templates-blog-template-jsx\":[\"/component---src-templates-blog-template-jsx.js\",\"/component---src-templates-blog-template-jsx.5068317f62135173b013.css\"],\"component---src-templates-doc-template-jsx\":[\"/component---src-templates-doc-template-jsx.js\",\"/component---src-templates-doc-template-jsx.0e85fbce360982ff881c.css\"]};/*]]>*/", "content_type": "text", "score": null, "meta": {"url": "https://milvus.io/docs/metric.md"}, "id_hash_keys": ["content"], "embedding": null, "id": "8a5059260ebea08efaa5629885b56a56"}